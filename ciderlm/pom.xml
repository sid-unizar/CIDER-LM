<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>es.unizar.sid</groupId>
  <artifactId>ciderlm</artifactId>
  <packaging>jar</packaging>
  <version>1.0</version>

  <name>ciderlm</name>
  <url>https://github.com/sid-unizar/CIDER-LM</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
	<maven.deploy.skip>true</maven.deploy.skip><!-- needed to call mvn deploy without having a distributionManagement -->
    <oaei.mainClass>es.unizar.sid.ciderlm.Main</oaei.mainClass>
    <matching.version>3.0</matching.version> <!-- version for all matching related packages -->
  </properties>

  <repositories>
    <repository>
        <id>jitpack.io</id>
        <url>https://jitpack.io</url>
    </repository>
  </repositories>

  <dependencies>
        <dependency>
            <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
            <artifactId>matching-base</artifactId>
            <version>${matching.version}</version>
        </dependency>
        
        <!-- This dependency is necessary for web submission. It contains the server wrapper. -->
        <dependency>
            <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
            <artifactId>receiver-http</artifactId>
            <version>${matching.version}</version>
        </dependency>
       
        <dependency>
            <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
            <artifactId>matching-eval</artifactId>
            <version>${matching.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.30</version>
        </dependency>

        <dependency>
            <groupId>com.github.docker-java</groupId>
            <artifactId>docker-java-core</artifactId>
            <version>3.2.7</version>
        </dependency>

        <dependency>
            <groupId>com.github.docker-java</groupId>
            <artifactId>docker-java-transport-httpclient5</artifactId>
            <version>3.2.7</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!-- the following plugin will generate a docker image and save it into the target folder -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.36.0</version>
                <configuration>
                    <!-- further machine configuration options: https://dmp.fabric8.io/#docker-machine
                         Use the following line in case you have installed docker on windows or mac
                    <machine><name>default</name></machine>
                    -->
                    <!-- Other options for plugin: https://dmp.fabric8.io/#docker:build -->
                    <images>
                        <image>
                            <name>%a-%v-web</name>
                            <build>
                                <from>python</from><!-- docker base image - Debian 11 with Python 3.10.4 -->
                                <runCmds>
                                    <!-- install all python dependencies -->
                                    <run>pip install -U owlready2</run>
                                    <run>pip install -U torch</run>
                                    <run>pip install -U sentence-transformers</run>
                                    <run>pip install -U scipy</run>
                                    <run>pip install -U numpy</run>
                                    <run>pip install -U six</run>
                                    <!-- install java -->
                                    <run>apt-get update</run>
                                    <run>apt-get -y install openjdk-11-jre</run>
                                </runCmds>
                                <assembly><descriptorRef>web</descriptorRef></assembly>
                                <cmd><shell>java -cp "${project.build.finalName}.${project.packaging}:lib/*" de.uni_mannheim.informatik.dws.melt.receiver_http.Main</shell></cmd>
                                <workdir>/maven</workdir>
                                <ports><port>8080</port></ports><!--port exposure to specify on which port the server runs -->
                            </build>
                        </image>
                    </images>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>de.uni-mannheim.informatik.dws.melt</groupId>
                        <artifactId>matching-assembly</artifactId>
                        <version>${matching.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                            <goal>save</goal>
                        </goals>
                        <!--execute build and save when calling "mvn install" -->
                        <phase>install</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>